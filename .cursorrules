# Hygromanteia - Projeto de Horas Planet√°rias

## üõ†Ô∏è Stack Tecnol√≥gica

### Frontend
- **Next.js 15.2.4** - Framework React com App Router
- **React 19.1.0** - Biblioteca principal com hooks modernos
- **TypeScript** - Linguagem tipada para maior seguran√ßa
- **Tailwind CSS** - Framework de CSS utilit√°rio
- **shadcn/ui** - Biblioteca de componentes baseada em Radix UI

### Depend√™ncias UI/UX
- **@radix-ui/react-slot** - Componentes compostos
- **class-variance-authority (cva)** - Variantes de classe tipadas
- **Lucide React** - √çcones modernos (se necess√°rio)

## üèóÔ∏è Arquitetura e Padr√µes

### Estrutura de Projeto
- `/app` - App Router do Next.js 15
- `/components/ui` - Componentes reutiliz√°veis do shadcn/ui
- `/lib` - Utilit√°rios e configura√ß√µes
- `/styles` - Estilos globais

### Padr√µes React
- **Hooks funcionais**: useState, useEffect, useCallback
- **Componentes funcionais** com TypeScript
- **Estados controlados** para navega√ß√£o entre horas
- **Effects com depend√™ncias** para atualiza√ß√µes autom√°ticas
- **Cleanup de timers** para performance

### Gerenciamento de Estado
- Estados locais com useState:
  - `location` - Geolocaliza√ß√£o do usu√°rio
  - `currentTime` - Hora atual (atualizada a cada segundo)
  - `selectedHourIndex` - Hora selecionada para navega√ß√£o
  - `allPlanetaryHours` - Array completo das 24 horas planet√°rias
  - Estados de loading e erro

## üé® Design System

### Componentes shadcn/ui Utilizados
- **Button** - Com variantes: outline, ghost, link
- **Tamanhos**: sm, icon
- **Estados**: disabled, hover

### Tipografia e Layout
- **Tailwind classes**: Responsividade (md:, lg:)
- **Flexbox**: Para layouts centralizados e alinhamentos
- **Grid**: Se necess√°rio para layouts complexos
- **Spacing**: gap-1, gap-2, gap-4 para espa√ßamentos consistentes

### Cores e Est√©tica
- **Paleta neutra**: text-gray-400, text-gray-500, text-gray-600, text-gray-900
- **Hover states**: hover:text-gray-600, hover:bg-gray-100
- **Background**: bg-white para tema claro

## üåç APIs e Integra√ß√µes

### Geolocaliza√ß√£o
- **Navigator.geolocation** - API nativa do browser
- **Configura√ß√µes**: enableHighAccuracy, timeout, maximumAge
- **Fallback**: Localiza√ß√£o padr√£o (S√£o Paulo)
- **Error handling**: Tratamento de erros de permiss√£o

### API Externa
- **BigDataCloud Reverse Geocoding** - Para obter nomes de cidades
- **Sunrise-sunset.org** - Para hor√°rios precisos de nascer/p√¥r do sol
- **Fallback calculations** - C√°lculos aproximados baseados em latitude

## ü™ê Dom√≠nio Espec√≠fico (Astrologia/Magia)

### Conceitos Implementados
- **Ordem Cald√©ica dos Planetas**: Sol, V√™nus, Merc√∫rio, Lua, Saturno, J√∫piter, Marte
- **24 Horas Planet√°rias** - 12 diurnas + 12 noturnas
- **S√≠mbolos Astrol√≥gicos**: Unicode (‚òâ, ‚òæ, ‚òø, ‚ôÄ, ‚ôÇ, ‚ôÉ, ‚ôÑ)
- **Dias da Semana Cl√°ssicos**: Baseados nos planetas regentes

### C√°lculos Astron√¥micos
- **Dura√ß√£o vari√°vel das horas**: Baseada no nascer/p√¥r do sol real
- **Ajustes sazonais**: Considerando latitude e √©poca do ano
- **Precis√£o geogr√°fica**: Uso de coordenadas reais

## üåê Internacionaliza√ß√£o

### Idioma
- **Portugu√™s brasileiro** como padr√£o
- **Preposi√ß√µes corretas**: "da Lua", "do Sol", "de Marte", etc.
- **Formata√ß√£o de datas**: dd/mm/yyyy em portugu√™s
- **Dias da semana**: Nomes completos em portugu√™s

### Formata√ß√£o
- **Hor√°rios**: Formato 24h (HH:mm)
- **Ordinais**: 1¬™, 2¬™, 10¬™ hora (forma feminina)
- **S√≠mbolos Unicode**: Para navega√ß√£o (‚Üê, ‚Üí, ‚Ü∫)

## üéØ UX/UI Principles

### Intera√ß√£o
- **Navega√ß√£o intuitiva**: Setas direcionais para navega√ß√£o temporal
- **Feedback visual**: Estados hover e disabled
- **Tooltips**: Explica√ß√µes contextuais
- **Reset f√°cil**: Bot√£o para voltar ao "agora"

### Responsividade
- **Mobile-first**: Design que funciona em todos os tamanhos
- **Breakpoints**: sm:, md:, lg: do Tailwind
- **Texto escal√°vel**: text-sm, text-lg, text-xl, text-3xl

### Performance
- **Timers otimizados**: setInterval com cleanup
- **Estados de loading**: Feedback durante carregamento
- **Error boundaries**: Tratamento gracioso de erros
- **Caching**: maximumAge para geolocaliza√ß√£o

## üß© Padr√µes de C√≥digo

### TypeScript
- **Interfaces tipadas**: Location, PlanetaryHourInfo, SunriseSunsetData
- **Type safety**: Props tipados, Record<string, string> para mappings
- **Enum-like objects**: Para constantes (PLANETS, PLANET_SYMBOLS)

### Naming Conventions
- **camelCase**: Para vari√°veis e fun√ß√µes
- **PascalCase**: Para interfaces e componentes
- **SCREAMING_SNAKE_CASE**: Para constantes
- **Descritivos**: Nomes que explicam a funcionalidade

### Coment√°rios
- **Coment√°rios em portugu√™s**: Explica√ß√µes claras do dom√≠nio
- **JSX comments**: {/* Descri√ß√£o das se√ß√µes */}
- **Documenta√ß√£o inline**: Para c√°lculos complexos

## üöÄ Build e Deploy

### Desenvolvimento
- **npm run dev**: Servidor de desenvolvimento
- **Hot reload**: Atualiza√ß√µes em tempo real
- **TypeScript checking**: Verifica√ß√£o de tipos em tempo real
- **Port fallback**: 3000 ‚Üí 3001 se necess√°rio

### Produ√ß√£o
- **Next.js optimizations**: Bundle splitting, tree shaking
- **Static optimization**: Para melhor performance
- **SEO friendly**: Metadata configurado

## üì± Recursos Modernos

### Web APIs
- **Geolocation API**: Para localiza√ß√£o autom√°tica
- **Fetch API**: Para requisi√ß√µes HTTP
- **Date API**: Para manipula√ß√£o de tempo
- **CSS Custom Properties**: Se necess√°rio

### Acessibilidade
- **Semantic HTML**: Uso correto de elementos
- **ARIA labels**: Em tooltips e bot√µes
- **Keyboard navigation**: Suporte nativo dos componentes
- **Screen reader friendly**: Textos descritivos

## üîß Utils e Helpers

### Fun√ß√µes Utilit√°rias
- `formatTime()` - Formata√ß√£o de hor√°rios
- `formatOrdinal()` - N√∫meros ordinais em portugu√™s
- `getPlanetWithPreposition()` - Preposi√ß√µes corretas
- `calculatePlanetaryHours()` - C√°lculo das horas planet√°rias

### Constantes
- `PLANETS` - Ordem cald√©ica
- `PLANET_SYMBOLS` - S√≠mbolos Unicode
- `PLANET_PREPOSITIONS` - Preposi√ß√µes em portugu√™s
- `DAYS_PT` / `DAYS_CLASSICAL` - Nomes dos dias

---

## üìã Conven√ß√µes do Projeto

1. **Sempre responder em portugu√™s**
2. **Usar componentes shadcn/ui quando dispon√≠veis**
3. **Manter tipagem TypeScript rigorosa**
4. **Implementar estados de loading e erro**
5. **Considerar responsividade mobile-first**
6. **Usar preposi√ß√µes corretas em portugu√™s**
7. **Manter s√≠mbolos Unicode para elementos visuais**
8. **Implementar cleanup adequado de effects**
9. **Usar naming conventions consistentes**
10. **Documentar c√°lculos astron√¥micos complexos**
